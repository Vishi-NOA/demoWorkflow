{
  "name": "Competitor Intelligence Workflow with webhooks",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "get-research-data",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -480,
        176
      ],
      "id": "81166dab-eb91-4627-b773-1aa7f7bd86ee",
      "name": "Webhook",
      "webhookId": "025bc4bf-00c0-47d4-bd5f-79046674d017"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8d9701b6-1dc2-4e55-9fe4-ef1735ff1ebc",
              "leftValue": "={{ $json.body.payload.status }}",
              "rightValue": "finished",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "7cf18a23-f3d8-4a70-a77c-c286a231fc7f",
              "leftValue": "={{ $json.body.payload.metadata.source }}",
              "rightValue": "n8n-competitor-demo",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -256,
        176
      ],
      "id": "b38737cc-0b8a-4a76-930f-362eb5de9ef9",
      "name": "If"
    },
    {
      "parameters": {
        "formTitle": "Run Competitor Analysis",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Competitor Name",
              "placeholder": "(e.g. OpenAI)",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -336,
        -64
      ],
      "id": "fcfc33dd-7d8a-460b-838d-955c65416aea",
      "name": "On form submission",
      "webhookId": "b2712d5b-14ae-424b-8733-fe6e77cebd43"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.browser-use.com/api/v1/run-task",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"task\": \"Do exhaustive research on {{ $json['Competitor Name'] }} and extract all pricing information, job postings, new features and announcements\",\n  \"save_browser_data\": true,\n  \"structured_output_json\": \"{\\n  \\\"pricing\\\": {\\n    \\\"plans\\\": [\\\"string\\\"],\\n    \\\"prices\\\": [\\\"string\\\"],\\n    \\\"features\\\": [\\\"string\\\"]\\n  },\\n  \\\"jobs\\\": {\\n    \\\"titles\\\": [\\\"string\\\"],\\n    \\\"departments\\\": [\\\"string\\\"],\\n    \\\"locations\\\": [\\\"string\\\"]\\n  },\\n  \\\"new_features\\\": {\\n    \\\"titles\\\": [\\\"string\\\"],\\n    \\\"description\\\": [\\\"string\\\"]\\n  },\\n  \\\"announcements\\\": {\\n    \\\"titles\\\": [\\\"string\\\"],\\n    \\\"description\\\": [\\\"string\\\"]\\n  }\\n}\",\n\"metadata\": {\"source\": \"n8n-competitor-demo\"}\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -112,
        -64
      ],
      "id": "d10bef40-e2a3-41ff-a507-4f365c13dc52",
      "name": "BrowserUse Run Task",
      "credentials": {
        "httpBearerAuth": {
          "id": "peg6MzgmJNRMCMnT",
          "name": "Browser-Use API Key"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.browser-use.com/api/v1/task/{{ $('Webhook').item.json.body.payload.session_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        144
      ],
      "id": "e49c28ff-11a2-4195-94ab-ca5796572c34",
      "name": "Get Task details",
      "credentials": {
        "httpBearerAuth": {
          "id": "peg6MzgmJNRMCMnT",
          "name": "Browser-Use API Key"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const output_data = $input.first().json.output;\nconst data = JSON.parse(output_data);\n\nconst pricing = data?.pricing;\nconst jobs = data?.jobs;\nconst newFeatures = data?.new_features;\nconst announcements = data?.announcements;\n\n// Helper function to format arrays as bullet points\nconst formatAsBullets = (arr, prefix = \"‚Ä¢ \" => {\n  if (!arr || arr.length === 0) return \"‚Ä¢ N/A\";\n  return arr.map(item => `${prefix}${item}`).join(\"\\n\");\n};\n\nreturn {\n  text: `üè∑Ô∏è *Pricing*\\nPlans:\\n${formatAsBullets(pricing?.plans)}\\n\\nPrices:\\n${formatAsBullets(pricing?.prices)}\\n\\nFeatures:\\n${formatAsBullets(pricing?.features)}\\n\\nüíº *Jobs*\\nTitles:\\n${formatAsBullets(jobs?.titles)}\\n\\nDepartments:\\n${formatAsBullets(jobs?.departments)}\\n\\nLocations:\\n${formatAsBullets(jobs?.locations)}\\n\\n‚ú® *New Features*\\nTitles:\\n${formatAsBullets(newFeatures?.titles)}\\n\\nDescription:\\n${formatAsBullets(newFeatures?.description)}\\n\\nüì¢ *Announcements*\\n${formatAsBullets(announcements?.description)}`\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        208,
        144
      ],
      "id": "54bc087d-237d-438a-b688-bcbec25d9c45",
      "name": "Generate Slack message"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.text }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        432,
        144
      ],
      "id": "969a16f0-677b-4e46-a8bb-57a80b5daf07",
      "name": "Send to Slack"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Get Task details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "BrowserUse Run Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Task details": {
      "main": [
        [
          {
            "node": "Generate Slack message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Slack message": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f3b38678-4821-41ad-952c-df9bbba40fc8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "7a1d1fd830bae2a00010153cf810fd67e0c87b8ae64ceb62273c87183efda365"
  },
  "id": "qmhqkZH8DhISWMmc",
  "tags": []
}